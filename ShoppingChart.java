

import java.util.ArrayList;
import java.io.*;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;


public class ShoppingChart extends javax.swing.JFrame {

    private String name;
    private String email;
    private int ID;
    private HashMap<Integer,Card> cards = new HashMap<Integer,Card>();
    private ArrayList<Purchase> purchases = new ArrayList<Purchase>();
    private int reciept_ID;
    private ArrayList<double[]> purchaseDetails = new ArrayList<double[]>();
    private double[] loadPurchaseDetails;
    
    
    
    
    public ShoppingChart() {
        initComponents();
        cards.put(0,new Card(0,0));
        ButtonGroup cardOptions =new ButtonGroup();
        ButtonGroup sort =new ButtonGroup();
        cardOptions.add(optBasic);
        cardOptions.add(optPremium);
        cardOptions.add(optAnonymous);
        sort.add(sortByID);
        sort.add(sortByName);
        
        loadCards();
        loadPurchases();
        saveFiles();

        
        
 /*       cards.put(1,new BasicCard(1,29.8, "Tony","tony@gmail.com", 600.25));
        cards.put(2,new BasicCard(2,5001.2, "Sharn","Sharn@gmail.com", 2012.2));
        cards.put(3,new BasicCard(3,3000, "Tom","tom@gmail.com", 100.56));
        cards.put(4,new PremiumCard(4,32.1, "Leo","leo@gmail.com", 900.62));
        cards.put(5,new PremiumCard(5,800.23, "Richard","rich@gmail.com", 20.4));
        cards.put(6,new PremiumCard(6,5000.45, "Victor","victor@gmail.com", 9100.62));
        cards.put(7,new AnonCard(7,18.21));
        cards.put(8,new AnonCard(8,800.45));
        cards.put(9,new AnonCard(9,9000));
        
        purchaseDetails.add(new double[]{23.1, 123.2, 25.5, 44.6, 81.10});
        purchaseDetails.add(new double[]{29.59, 0, 88.2, 4.6, 81.54});
        purchaseDetails.add(new double[]{200.45, 443.2, 65.3, 0, 0});
        purchaseDetails.add(new double[]{87.36, 97, 0, 0, 0});
        purchaseDetails.add(new double[]{300.45, 85.2, 75.5, 65, 0});
        
        purchases.add(new Purchase(20001,cards.get(0),"this Time",purchaseDetails.get(0)));
        purchases.add(new Purchase(20002,cards.get(1),"this Time",purchaseDetails.get(1)));
        purchases.add(new Purchase(20003,cards.get(2),"this Time",purchaseDetails.get(2)));
        purchases.add(new Purchase(20004,cards.get(3),"this Time",purchaseDetails.get(3)));
        purchases.add(new Purchase(20005,cards.get(4),"this Time",purchaseDetails.get(4)));
        purchases.add(new Purchase(20006,cards.get(5),"this Time",purchaseDetails.get(0)));
        purchases.add(new Purchase(20007,cards.get(6),"this Time",purchaseDetails.get(1)));
        purchases.add(new Purchase(20008,cards.get(7),"this Time",purchaseDetails.get(2)));
        purchases.add(new Purchase(20009,cards.get(8),"this Time",purchaseDetails.get(3)));
        purchases.add(new Purchase(20010,cards.get(9),"this Time",purchaseDetails.get(4)));*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        tabShoppingChart = new javax.swing.JTabbedPane();
        palNewCard = new javax.swing.JPanel();
        optBasic = new javax.swing.JRadioButton();
        optPremium = new javax.swing.JRadioButton();
        optAnonymous = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        addName = new javax.swing.JTextField();
        addEmail = new javax.swing.JTextField();
        addNewCardButton = new javax.swing.JButton();
        palViewCards = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        viewCardID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        cardTextArea = new javax.swing.JTextArea();
        buttonViewCard = new javax.swing.JButton();
        buttonDeleteCard = new javax.swing.JButton();
        showAllCards = new javax.swing.JButton();
        sortByID = new javax.swing.JRadioButton();
        sortByName = new javax.swing.JRadioButton();
        palMakePurchase = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        purCardID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        vegiAmount = new javax.swing.JTextField();
        drinksAmount = new javax.swing.JTextField();
        seafoodAmount = new javax.swing.JTextField();
        breadAmount = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        purTextArea = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        meatAmount = new javax.swing.JTextField();
        buttonCashPay = new javax.swing.JCheckBox();
        palSummary = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        summaryTextArea = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        shutDownButton = new javax.swing.JButton();
        cardOvButton = new javax.swing.JButton();
        purOvButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        optBasic.setSelected(true);
        optBasic.setText("Baisc Card");

        optPremium.setText("Premium Card");

        optAnonymous.setText("Anonymous Card");
        optAnonymous.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                optAnonymousStateChanged(evt);
            }
        });
        optAnonymous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optAnonymousActionPerformed(evt);
            }
        });

        jLabel1.setText("Name:");

        jLabel2.setText("E-mail:");

        addNewCardButton.setText("Add");
        addNewCardButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addNewCardButtonMouseClicked(evt);
            }
        });
        addNewCardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewCardButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout palNewCardLayout = new javax.swing.GroupLayout(palNewCard);
        palNewCard.setLayout(palNewCardLayout);
        palNewCardLayout.setHorizontalGroup(
            palNewCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(palNewCardLayout.createSequentialGroup()
                .addGroup(palNewCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(palNewCardLayout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addGroup(palNewCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(optAnonymous, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(optPremium, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(optBasic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(66, 66, 66))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, palNewCardLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(palNewCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(41, 41, 41)))
                .addGroup(palNewCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addName)
                    .addComponent(addEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))
                .addContainerGap(244, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, palNewCardLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(addNewCardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(215, 215, 215))
        );
        palNewCardLayout.setVerticalGroup(
            palNewCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(palNewCardLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(optBasic)
                .addGap(18, 18, 18)
                .addComponent(optPremium)
                .addGap(18, 18, 18)
                .addComponent(optAnonymous)
                .addGap(87, 87, 87)
                .addGroup(palNewCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(addName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(palNewCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(addEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(addNewCardButton)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        tabShoppingChart.addTab("New Card", palNewCard);

        jLabel3.setText("Card ID:");

        cardTextArea.setColumns(20);
        cardTextArea.setRows(5);
        jScrollPane1.setViewportView(cardTextArea);

        buttonViewCard.setText("view this card");
        buttonViewCard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickViewThisCard(evt);
            }
        });
        buttonViewCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonViewCardActionPerformed(evt);
            }
        });

        buttonDeleteCard.setText("delete this card");
        buttonDeleteCard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickDeleteCard(evt);
            }
        });

        showAllCards.setText("Show all cards");
        showAllCards.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actShowAllCards(evt);
            }
        });
        showAllCards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllCardsActionPerformed(evt);
            }
        });

        sortByID.setSelected(true);
        sortByID.setText("sort by ID");

        sortByName.setText("sort by name");

        javax.swing.GroupLayout palViewCardsLayout = new javax.swing.GroupLayout(palViewCards);
        palViewCards.setLayout(palViewCardsLayout);
        palViewCardsLayout.setHorizontalGroup(
            palViewCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(palViewCardsLayout.createSequentialGroup()
                .addGroup(palViewCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(palViewCardsLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(palViewCardsLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(palViewCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3)
                            .addComponent(sortByName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sortByID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(palViewCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(palViewCardsLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(viewCardID, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(buttonViewCard)
                                .addGap(18, 18, 18)
                                .addComponent(buttonDeleteCard))
                            .addGroup(palViewCardsLayout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(showAllCards)))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        palViewCardsLayout.setVerticalGroup(
            palViewCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(palViewCardsLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(palViewCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(viewCardID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonViewCard)
                    .addComponent(buttonDeleteCard))
                .addGroup(palViewCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(palViewCardsLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(showAllCards))
                    .addGroup(palViewCardsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(sortByID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sortByName)))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabShoppingChart.addTab("View Cards", palViewCards);

        jLabel4.setText("Card ID:");

        jLabel5.setText("Drinks:");

        jLabel6.setText("Vegetables:");

        jLabel7.setText("Seafood:");

        jLabel8.setText("Bread:");

        jButton4.setText("make purchase");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                makeNewPurchase(evt);
            }
        });

        purTextArea.setColumns(20);
        purTextArea.setRows(5);
        jScrollPane2.setViewportView(purTextArea);

        jLabel9.setText("Meat:");

        buttonCashPay.setText("pay by cash");
        buttonCashPay.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                buttonCashPayStateChanged(evt);
            }
        });

        javax.swing.GroupLayout palMakePurchaseLayout = new javax.swing.GroupLayout(palMakePurchase);
        palMakePurchase.setLayout(palMakePurchaseLayout);
        palMakePurchaseLayout.setHorizontalGroup(
            palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(palMakePurchaseLayout.createSequentialGroup()
                .addGroup(palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(palMakePurchaseLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(palMakePurchaseLayout.createSequentialGroup()
                                .addGroup(palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(palMakePurchaseLayout.createSequentialGroup()
                                        .addGroup(palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(14, 14, 14))
                                    .addGroup(palMakePurchaseLayout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(palMakePurchaseLayout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, palMakePurchaseLayout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(meatAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                    .addComponent(vegiAmount)
                                    .addComponent(seafoodAmount)
                                    .addComponent(breadAmount)))
                            .addGroup(palMakePurchaseLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(palMakePurchaseLayout.createSequentialGroup()
                                .addGap(0, 72, Short.MAX_VALUE)
                                .addGroup(palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buttonCashPay)
                                    .addGroup(palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(drinksAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(purCardID, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(117, 117, 117))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, palMakePurchaseLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton4)
                        .addGap(95, 95, 95)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                .addContainerGap())
        );
        palMakePurchaseLayout.setVerticalGroup(
            palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(palMakePurchaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(purCardID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonCashPay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(meatAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(37, 37, 37)
                .addGroup(palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(drinksAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(41, 41, 41)
                .addGroup(palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vegiAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(35, 35, 35)
                .addGroup(palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seafoodAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(34, 34, 34)
                .addGroup(palMakePurchaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(breadAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(33, 33, 33)
                .addComponent(jButton4)
                .addGap(42, 42, 42))
            .addComponent(jScrollPane2)
        );

        tabShoppingChart.addTab("Make Purchase", palMakePurchase);

        summaryTextArea.setColumns(20);
        summaryTextArea.setRows(5);
        jScrollPane3.setViewportView(summaryTextArea);

        jButton5.setText("card summary");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showCardSummary(evt);
            }
        });

        jButton6.setText("cash summary");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showCashSummary(evt);
            }
        });

        shutDownButton.setText("Shut Down");
        shutDownButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shutDownButtonOnClick(evt);
            }
        });

        cardOvButton.setText("card overview");
        cardOvButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showCardOverview(evt);
            }
        });
        cardOvButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardOvButtonActionPerformed(evt);
            }
        });

        purOvButton.setText("purchase overview");
        purOvButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showPurOverview(evt);
            }
        });

        javax.swing.GroupLayout palSummaryLayout = new javax.swing.GroupLayout(palSummary);
        palSummary.setLayout(palSummaryLayout);
        palSummaryLayout.setHorizontalGroup(
            palSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, palSummaryLayout.createSequentialGroup()
                .addGroup(palSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(palSummaryLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(shutDownButton))
                    .addGroup(palSummaryLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(palSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cardOvButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(purOvButton, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        palSummaryLayout.setVerticalGroup(
            palSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(palSummaryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(palSummaryLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jButton5)
                .addGap(26, 26, 26)
                .addComponent(jButton6)
                .addGap(31, 31, 31)
                .addComponent(cardOvButton)
                .addGap(37, 37, 37)
                .addComponent(purOvButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                .addComponent(shutDownButton)
                .addGap(50, 50, 50))
        );

        tabShoppingChart.addTab("Summary", palSummary);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabShoppingChart, javax.swing.GroupLayout.PREFERRED_SIZE, 811, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tabShoppingChart, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addNewCardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewCardButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addNewCardButtonActionPerformed

    private void optAnonymousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optAnonymousActionPerformed
        //dddddddddddddddddddddddddddddddd
    }//GEN-LAST:event_optAnonymousActionPerformed

    private void addNewCardButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addNewCardButtonMouseClicked

        name = addName.getText();
        email = addEmail.getText();

        if (name.length() < 1&&!optAnonymous.isSelected()){
            JOptionPane.showMessageDialog(null, "Please enter a name.");
            logFile("AddCard","non","status: noNameInput");
        }
        else if (email.length() < 1&&!optAnonymous.isSelected()){
            JOptionPane.showMessageDialog(null, "Please enter an e-mail.");
            logFile("AddCard","non","status: noEmailInput");
        }
        else {
            ID = 1;
            while (cards.containsKey(ID)){
                ID++;
            }

            if (optBasic.isSelected()){
                cards.put(ID,new BasicCard(ID,0,name,email,0));
                JOptionPane.showMessageDialog(null, "Basic Card added!.");
                logFile("AddBasicCard",""+ID,"status: Added");
            }
            else if(optPremium.isSelected()){
                cards.put(ID,new PremiumCard(ID,0,name,email,0));
                JOptionPane.showMessageDialog(null, "Premium Card added!.");
                logFile("AddPremiumCard",""+ID,"status: Added");
            }
            else if (optAnonymous.isSelected()){
                cards.put(ID,new AnonCard(ID,0));
                JOptionPane.showMessageDialog(null, "Anonymous Card added!.");
                logFile("AddAnonymousCard",""+ID,"status: Added");
            }
            
            addName.setText("");
            addEmail.setText("");
        }
    }//GEN-LAST:event_addNewCardButtonMouseClicked

    private void actShowAllCards(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actShowAllCards
        cardTextArea.setText("");
        if (cards.isEmpty()){
            cardTextArea.setText("no card registered");
        }
        else{
            if (sortByID.isSelected()){
                
                for(HashMap.Entry<Integer, Card> entry : cards.entrySet()){
                    printCard(entry.getValue());
                }
            }
            else if(sortByName.isSelected()){
               
                ArrayList<Card> orderedCard = new ArrayList<Card>();
                for(HashMap.Entry<Integer, Card> entry : cards.entrySet()){
                    orderedCard.add(entry.getValue());
                }
                //Collections.sort (orderedCard, Card::SortByName);
                orderedCard.sort(Card::SortByName);
                
                for(Card c:orderedCard)
                    printCard(c);  
            }
        }
    }//GEN-LAST:event_actShowAllCards

    private void showAllCardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllCardsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showAllCardsActionPerformed

    private void optAnonymousStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_optAnonymousStateChanged
        if(optAnonymous.isSelected()){
           addName.setEnabled(false);
           addEmail.setEnabled(false); 
        }
        else{
           addName.setEnabled(true);
           addEmail.setEnabled(true); 
        }
    }//GEN-LAST:event_optAnonymousStateChanged

    private void clickViewThisCard(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickViewThisCard
        if (validateCardIDInput(viewCardID)){
            cardTextArea.setText(cards.get(ID).cardDetailString());
            logFile("ViewCard",""+ID,"status: viewed");
        }
           
    }//GEN-LAST:event_clickViewThisCard

    private void clickDeleteCard(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickDeleteCard
        if (validateCardIDInput(viewCardID)){
            if (ID ==0){
                JOptionPane.showMessageDialog(null, "Card:0 is the default card for cash. It can not be deleted!");
                logFile("DeleteCard",""+ID,"status: Card 0 can not be deleted");
            }
            else{
                for(Purchase p: purchases){
                    if(p.card.ID==ID){
                        Purchase trasferP=new Purchase(p.reciept_ID,cards.get(0),p.time,p.purchaseDetails);
                        purchases.add(trasferP);
                        logFile("DeleteCard",""+ID,"status: deleted");
                        purchases.remove(p);
                    }
                }
                
                cards.remove(ID);
                JOptionPane.showMessageDialog(null, "Card: "+ID+" deleted");
            }
        }
        
    }//GEN-LAST:event_clickDeleteCard

    private void buttonCashPayStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_buttonCashPayStateChanged
        if (buttonCashPay.isSelected()){
            purCardID.setText("0");
            purCardID.setEnabled(false);
        }
        else{
            purCardID.setEnabled(true);
        }
    }//GEN-LAST:event_buttonCashPayStateChanged

    private void makeNewPurchase(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_makeNewPurchase
        if (validateCardIDInput(purCardID)){
            if (validateAmountInput(meatAmount)&&validateAmountInput(drinksAmount)
                    &&validateAmountInput(vegiAmount)&&validateAmountInput(seafoodAmount)&&validateAmountInput(breadAmount)){
                purchaseDetails.add(new double[]{Double.parseDouble(meatAmount.getText()), Double.parseDouble(drinksAmount.getText()), 
                    Double.parseDouble(vegiAmount.getText()), Double.parseDouble(seafoodAmount.getText()), Double.parseDouble(breadAmount.getText())});
                reciept_ID=10000+purchases.size();
                Date date = new Date();
                String time = date.toString();
                Purchase thisPurchase=new Purchase(reciept_ID,cards.get(ID),time,purchaseDetails.get(purchaseDetails.size()-1));
                purchases.add(thisPurchase);
                purTextArea.setText(thisPurchase.recieptString());
                logFile("makePurchase",""+ID," ReciptID: "+reciept_ID);
                JOptionPane.showMessageDialog(null, "Purchase made");
            }
        }
    }//GEN-LAST:event_makeNewPurchase

    private void showCardSummary(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showCardSummary
        int totalPurchase=0;
        double totalAmount=0;
        double meatTotal=0;
        double drinkTotal=0;
        double vegiTotal=0;
        double seaTotal=0;
        double BreadTotal=0;
        String Summary="";
        summaryTextArea.setText("");
        for(Purchase p: purchases){
            if (p.card.ID!=0){
                totalPurchase++;
                totalAmount+=p.total();
                meatTotal+=p.purchaseDetails[0];
                drinkTotal+=p.purchaseDetails[1];
                vegiTotal+=p.purchaseDetails[2];
                seaTotal+=p.purchaseDetails[3];
                BreadTotal+=p.purchaseDetails[4];
            }
        }
        
        Summary+= "\nthere are "+totalPurchase+" purchase made by card.\n Total amount: "+totalAmount+"\n=========================================\n";
        Summary+= "Meat:\t"+ meatTotal+"\nDrinks:\t"+drinkTotal+"\nVegetables:\t"+vegiTotal+"\nSeafood:\t"+seaTotal+"\nBread:\t"+BreadTotal;
        
        summaryTextArea.setText(Summary);
        Summary="";
    }//GEN-LAST:event_showCardSummary

    private void showCashSummary(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showCashSummary
        int totalPurchase=0;
        double totalAmount=0;
        double meatTotal=0;
        double drinkTotal=0;
        double vegiTotal=0;
        double seaTotal=0;
        double BreadTotal=0;
        String Summary="";
        for(Purchase p: purchases){
            if (p.card.ID==0){
                totalPurchase++;
                totalAmount+=p.total();
                meatTotal+=p.purchaseDetails[0];
                drinkTotal+=p.purchaseDetails[1];
                vegiTotal+=p.purchaseDetails[2];
                seaTotal+=p.purchaseDetails[3];
                BreadTotal+=p.purchaseDetails[4];
            }
        }
        
        Summary+= "\nthere are "+totalPurchase+" purchase made by cash.\n Total amount: "+totalAmount+"\n=========================================\n";
        Summary+= "Meat:\t"+ meatTotal+"\nDrinks:\t"+drinkTotal+"\nVegetables:\t"+vegiTotal+"\nSeafood:\t"+seaTotal+"\nBread:\t"+BreadTotal;
        
        summaryTextArea.setText(Summary);
        Summary="";
    }//GEN-LAST:event_showCashSummary

    private void shutDownButtonOnClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shutDownButtonOnClick
        saveFiles();
        System.exit(0);
    }//GEN-LAST:event_shutDownButtonOnClick

    private void buttonViewCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonViewCardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonViewCardActionPerformed

    private void cardOvButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardOvButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cardOvButtonActionPerformed

    private void showCardOverview(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showCardOverview
        int totalCards=-1;
        double totalPoints=0;
        double totalBalance=0;
        
        for (Map.Entry<Integer, Card> entry : cards.entrySet()) {  
                totalCards++;
                Card c=entry.getValue();
                totalPoints+=c.points;
                totalBalance+=c.balance();
        } 
        summaryTextArea.setText("total cards: "+totalCards+"\ntotal points: "+ totalPoints+ "\ntotal balance:"+ totalBalance);
    }//GEN-LAST:event_showCardOverview

    private void showPurOverview(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showPurOverview
        int totalPur = 0;
        double totalValue=0;
        double meatTotal=0;
        double drinkTotal=0;
        double vegiTotal=0;
        double seaTotal=0;
        double BreadTotal=0;
        String Summary="";
        for(Purchase p: purchases){
                totalPur++;
                totalValue+=p.total();
                meatTotal+=p.purchaseDetails[0];
                drinkTotal+=p.purchaseDetails[1];
                vegiTotal+=p.purchaseDetails[2];
                seaTotal+=p.purchaseDetails[3];
                BreadTotal+=p.purchaseDetails[4];
        }
        summaryTextArea.setText("total purchases: "+totalPur+"\ntotal value: "+ totalValue+ "\ntotal meat:"+ meatTotal+ "\ntotal drink:"+ drinkTotal+ "\ntotal vegi:"+ vegiTotal+ "\ntotal seafood:"+ seaTotal+ "\ntotal bread:"+ BreadTotal);
    }//GEN-LAST:event_showPurOverview

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShoppingChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShoppingChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShoppingChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShoppingChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShoppingChart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addEmail;
    private javax.swing.JTextField addName;
    private javax.swing.JButton addNewCardButton;
    private javax.swing.JTextField breadAmount;
    private javax.swing.JCheckBox buttonCashPay;
    private javax.swing.JButton buttonDeleteCard;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton buttonViewCard;
    private javax.swing.JButton cardOvButton;
    private javax.swing.JTextArea cardTextArea;
    private javax.swing.JTextField drinksAmount;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField meatAmount;
    private javax.swing.JRadioButton optAnonymous;
    private javax.swing.JRadioButton optBasic;
    private javax.swing.JRadioButton optPremium;
    private javax.swing.JPanel palMakePurchase;
    private javax.swing.JPanel palNewCard;
    private javax.swing.JPanel palSummary;
    private javax.swing.JPanel palViewCards;
    private javax.swing.JTextField purCardID;
    private javax.swing.JButton purOvButton;
    private javax.swing.JTextArea purTextArea;
    private javax.swing.JTextField seafoodAmount;
    private javax.swing.JButton showAllCards;
    private javax.swing.JButton shutDownButton;
    private javax.swing.JRadioButton sortByID;
    private javax.swing.JRadioButton sortByName;
    private javax.swing.JTextArea summaryTextArea;
    private javax.swing.JTabbedPane tabShoppingChart;
    private javax.swing.JTextField vegiAmount;
    private javax.swing.JTextField viewCardID;
    // End of variables declaration//GEN-END:variables

    private boolean isDigit(String text) {
        Pattern pattern = Pattern.compile("[0-9]{1,}");  
        Matcher matcher = pattern.matcher((CharSequence) text);  
    return matcher.matches();
    }

    private void printCard(Card c){
        cardTextArea.append(c.cardDetailString());   
    }
    
    private boolean validateCardIDInput(javax.swing.JTextField tField){
        if(tField.getText().length()<1){
            JOptionPane.showMessageDialog(null, "Please enter a card ID.");
            return false;
        }
        else if(isDigit(tField.getText())){
            ID=Integer.parseInt(tField.getText());
            if (cards.containsKey(ID)){
                return true;
            }
            else{
                JOptionPane.showMessageDialog(null, "No card found");
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please enter a number.");
            return false;
        }
    }
    
    private boolean validateAmountInput(javax.swing.JTextField tField){
        if(tField.getText().length()<1){
            JOptionPane.showMessageDialog(null, "Please enter the amount of every category");
            return false;
        }
        else if(!isDouble(tField.getText())){
            JOptionPane.showMessageDialog(null, "Please enter a number for every category");
            return false;
        }  
        else{
            return true;
        }
    }
    
    private boolean isDouble(String s){
        try{
            double b = Double.parseDouble(s);
        }catch(Exception e){
           return false;
        }
        return true;
    }
    
    private void loadCards(){
        try { 
            String cardsFilePath = "D:\\学习\\master of it\\4\\CSIT821 Object Oriented Design and Programing\\assignments\\assignment 1\\Assignment3\\src\\cards.txt"; 
            File cardsFile = new File(cardsFilePath); 
            BufferedReader br = new BufferedReader(new FileReader(cardsFile)); 
            String line = "";  
            line = br.readLine(); 
            
            while (line != null) { 
                ArrayList<String> theLine = new ArrayList<String>();
                for (String x: line.split(",")) {
                    theLine.add(x);
                }
                
                if(theLine.get(0).equals("a")){
                    cards.put(Integer.parseInt(theLine.get(1)),new AnonCard(Integer.parseInt(theLine.get(1)),Double.parseDouble(theLine.get(2))));
                }
                else if(theLine.get(0).equals("b")){
                    cards.put(Integer.parseInt(theLine.get(1)),new BasicCard(Integer.parseInt(theLine.get(1)),Double.parseDouble(theLine.get(2)), theLine.get(3),theLine.get(4), Double.parseDouble(theLine.get(5))));
                }
                else if(theLine.get(0).equals("p")){
                    cards.put(Integer.parseInt(theLine.get(1)),new PremiumCard(Integer.parseInt(theLine.get(1)),Double.parseDouble(theLine.get(2)), theLine.get(3),theLine.get(4), Double.parseDouble(theLine.get(5))));
                }
                
                line = br.readLine();
            }
        br.close();
            
        }  catch (Exception e) {  
            e.printStackTrace();  
        } 
    }
    
    private void loadPurchases(){
        try { 
            String purchasesFilePath = "D:\\学习\\master of it\\4\\CSIT821 Object Oriented Design and Programing\\assignments\\assignment 1\\Assignment3\\src\\purchases.txt"; 
            File purchasesFile = new File(purchasesFilePath); 
            BufferedReader br = new BufferedReader(new FileReader(purchasesFile)); 
            String line = "";  
            line = br.readLine(); 
            
            while (line != null) { 
                ArrayList<String> theLine = new ArrayList<String>();
                for (String x: line.split(",")) {
                    theLine.add(x);
                }
                loadPurchaseDetails=new double[]{Double.parseDouble(theLine.get(3)),Double.parseDouble(theLine.get(4)),Double.parseDouble(theLine.get(5)),Double.parseDouble(theLine.get(6)), Double.parseDouble(theLine.get(7))};
                purchases.add(new Purchase(Integer.parseInt(theLine.get(0)),cards.get(Integer.parseInt(theLine.get(1))),theLine.get(2),loadPurchaseDetails));
                
    
                line = br.readLine(); 
            }
        br.close();
            
        }  catch (Exception e) {  
            e.printStackTrace();  
        } 
    }
    
    private void saveFiles(){
        try {
            //save cards
            String cardsFilePath = "D:\\学习\\master of it\\4\\CSIT821 Object Oriented Design and Programing\\assignments\\assignment 1\\Assignment3\\src\\cards.txt"; 
            BufferedWriter bw=new BufferedWriter(new FileWriter(cardsFilePath));
            
            for (Map.Entry<Integer, Card> entry : cards.entrySet()) {  
                String wLine="";
                ID=entry.getKey();
                Card c=entry.getValue();
                String typ=c.toString().substring(0,1);
                if (typ.equals("C")){ 
                }
                else if (typ.equals("A")){
                    wLine+=typ.toLowerCase()+","+ID+","+c.points;
                    bw.write(wLine);
                    bw.newLine();
                }
                else{
                    wLine+=typ.toLowerCase()+","+ID+","+c.points+","+c.name+","+c.email()+","+c.balance();
                    bw.write(wLine);
                    bw.newLine();
                }
            } 
            bw.close();
            

            //save purchases
            String purchasesFilePath = "D:\\学习\\master of it\\4\\CSIT821 Object Oriented Design and Programing\\assignments\\assignment 1\\Assignment3\\src\\purchases.txt"; 
            bw=new BufferedWriter(new FileWriter(purchasesFilePath));
            for (Purchase p:purchases){
                String wLine="";
                wLine+=p.reciept_ID+","+p.card.ID+","+p.time+","+p.purchaseDetails[0]+","+p.purchaseDetails[1]+","+p.purchaseDetails[2]+","+p.purchaseDetails[3]+","+p.purchaseDetails[4];
                bw.write(wLine);
                bw.newLine();
            }
            bw.close();
        }  catch (Exception e) {  
            e.printStackTrace();  
        }
        
    }
    
    private void logFile(String operation, String cardID,String other){
        try{
            String logFilePath = "D:\\学习\\master of it\\4\\CSIT821 Object Oriented Design and Programing\\assignments\\assignment 1\\Assignment3\\src\\log.txt"; 
            BufferedWriter bw=new BufferedWriter(new FileWriter(logFilePath,true));
            Date date = new Date();
            String time = date.toString();
            String wLine=time+ " operation: " + operation+ " CardID: "+cardID+ " "+other;
            bw.write(wLine);
            bw.newLine();
            bw.close();
        }catch(Exception e){
            e.printStackTrace();
        }
    }
}
